@model EntityLayer.Concrete.Blog

@{
    ViewData["Title"] = "BlogAdd";
    Layout = "~/Views/Shared/WriterLayout.cshtml";
}

<h1>Yeni Blog Ekle</h1>

@using (Html.BeginForm("BlogAdd", "Blog", FormMethod.Post))
{
    @Html.Label("Blog Başlığı")
    @Html.TextBoxFor(x => x.BlogTitle  , new{@class="form-control" , @placeholder = "" })
    @Html.ValidationMessageFor(x => x.BlogTitle, "" , new{@class="text-danger"})
    <br />
    @Html.Label("Görsel Dosya Yolu")
    @Html.TextBoxFor(x => x.BlogImage , new{@class="form-control" , @placeholder = ""})
    @Html.ValidationMessageFor(x => x.BlogImage , "" , new{@class="text-danger"})
    <br />
    @Html.Label("Küçük Görsel Dosya Yolu")
    @Html.TextBoxFor(x => x.BlogThumbnailImage , new{@class="form-control" , @placeholder = ""})
    @Html.ValidationMessageFor(x => x.BlogThumbnailImage , "" , new{@class="text-danger"})
    <br />
    @Html.Label("Kategori")
    @Html.DropDownListFor(x => x.CategoryID, (List<SelectListItem>)ViewBag.categoryvalue, new {@class="form-control"})
    <br />
    @Html.Label("Blog İçeriği")
    @Html.TextAreaFor(x => x.BlogContent , 10,3 , new{@class="form-control" , @placeholder = ""})
    @Html.ValidationMessageFor(x => x.BlogContent , "" , new{@class="text-danger"})
    <br />

    <button class="btn btn-primary">Ekle</button>
}
